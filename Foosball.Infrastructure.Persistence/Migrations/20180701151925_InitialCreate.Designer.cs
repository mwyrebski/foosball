// <auto-generated />
using System;
using Foosball.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Foosball.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FoosballDbContext))]
    [Migration("20180701151925_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Foosball.Domain.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("StartedAt");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Foosball.Domain.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("SetId");

                    b.Property<int>("Team");

                    b.HasKey("GoalId");

                    b.HasIndex("SetId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Foosball.Domain.Set", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("GameId");

                    b.HasKey("SetId");

                    b.HasIndex("GameId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("Foosball.Domain.Goal", b =>
                {
                    b.HasOne("Foosball.Domain.Set")
                        .WithMany("Goals")
                        .HasForeignKey("SetId");
                });

            modelBuilder.Entity("Foosball.Domain.Set", b =>
                {
                    b.HasOne("Foosball.Domain.Game")
                        .WithMany("Sets")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
